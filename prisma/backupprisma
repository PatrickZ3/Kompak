// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int     @id @default(autoincrement())
  firstName         String
  lastName          String
  email             String  @unique
  verified          Boolean @default(false)
  verificationToken String?
  password          String
  tasks             Task[]
  boards            Board[] @relation("BoardCreator")
}

model Board {
  id          Int      @id @default(autoincrement())
  title       String
  boardCode   String   @unique
  description String
  dateCreated DateTime @default(now())
  tasks       Task[]
  creator     User     @relation("BoardCreator", fields: [creatorId], references: [id])
  creatorId   Int
}

model Task {
  id          Int          @id @default(autoincrement())
  taskKey     String
  title       String
  description String
  priority    TaskPriority @default(MEDIUM)
  status      TaskStatus   @default(TODO)
  dateCreated DateTime     @default(now())
  dateFinish  DateTime?
  board       Board        @relation(fields: [boardId], references: [id])
  boardId     Int
  assignee    User?        @relation(fields: [assigneeId], references: [id])
  assigneeId  Int?

  @@unique([taskKey, boardId])
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
